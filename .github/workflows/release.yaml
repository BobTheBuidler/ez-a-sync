name: Build and Publish Wheels

on:
  release:
    branches:
      - master
    types: [published]

jobs:
  build_wheels:
    name: Build wheels using cibuildwheel
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux
          - os: ubuntu-latest
            cibw_archs_windows: none

          # macOS
          - os: macos-latest
            cibw_archs_windows: none

          # Windows 64-bit wheels
          - os: windows-latest
            name: windows-x64
            cibw_archs_windows: x86_64

          # Windows 32-bit wheels
          - os: windows-latest
            name: windows-x86
            cibw_archs_windows: x86

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # On macOS and Windows, actions/setup-python provides Python.
      # On Ubuntu, cibuildwheel uses Docker to create manylinux wheels by default.
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install cibuildwheel
        run: |
          python -m pip install --upgrade pip setuptools wheel cibuildwheel

      - name: Build wheels
        env:
          # skip building wheels for PyPy
          CIBW_SKIP: pp*
          # for Windows, specify which architecture to build
          CIBW_ARCHS_WINDOWS: ${{ matrix.cibw_archs_windows }}
        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          # include architecture in artifact name
          name: wheels-${{ matrix.os }}-${{ matrix.cibw_archs_windows }}
          path: wheelhouse/*.whl

  publish_sdist_and_wheels:
    name: Publish wheels to PyPI
    needs: build_wheels
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine cython
  
      - name: Build sdist
        run: |
          python setup.py sdist

      # Download and group wheel artifacts
      - name: Download wheels (Ubuntu)
        uses: actions/download-artifact@v4
        with:
          name: "wheels-ubuntu-latest-none"
          path: wheelhouse/ubuntu

      - name: Download wheels (macOS)
        uses: actions/download-artifact@v4
        with:
          name: "wheels-macos-latest-none"
          path: wheelhouse/macos

      - name: Download wheels (Windows 64)
        uses: actions/download-artifact@v4
        with:
          name: "wheels-windows-latest-x86_64"
          path: wheelhouse/windows-x64

      - name: Download wheels (Windows 32)
        uses: actions/download-artifact@v4
        with:
          name: "wheels-windows-latest-x86"
          path: wheelhouse/windows-x86

      - name: Publish sdist and wheels to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload \
            dist/* \
            wheelhouse/ubuntu/*.whl \
            wheelhouse/macos/*.whl \
            wheelhouse/windows-x64/*.whl \
            wheelhouse/windows-x86/*.whl
